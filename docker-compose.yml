version: '3.8'

services:
  # Database
  mariadb:
    image: mariadb:11
    container_name: manuscripto-mariadb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: manuscripto
      MYSQL_USER: manuscripto
      MYSQL_PASSWORD: manuscripto
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - manuscripto-network

  # Redis Cache & Sessions
  redis:
    image: redis:7-alpine
    container_name: manuscripto-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - manuscripto-network

  # Meilisearch
  meilisearch:
    image: getmeili/meilisearch:v1.5
    container_name: manuscripto-meilisearch
    restart: unless-stopped
    environment:
      MEILI_MASTER_KEY: masterKey
      MEILI_ENV: development
    ports:
      - "7700:7700"
    volumes:
      - meilisearch_data:/meili_data
    networks:
      - manuscripto-network

  # Minio S3-compatible storage
  minio:
    image: minio/minio:latest
    container_name: manuscripto-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - manuscripto-network

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: manuscripto-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - manuscripto-network

  # Yjs WebSocket server for real-time collaboration
  y-websocket:
    image: node:18-alpine
    container_name: manuscripto-y-websocket
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./services/realtime:/app
    ports:
      - "1234:1234"
    command: sh -c "npm install && npm start"
    networks:
      - manuscripto-network
    depends_on:
      - redis

  # Laravel Backend
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: manuscripto-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./apps/api:/var/www/html
      - /var/www/html/vendor
      - /var/www/html/node_modules
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=mariadb
      - DB_PORT=3306
      - DB_DATABASE=manuscripto
      - DB_USERNAME=manuscripto
      - DB_PASSWORD=manuscripto
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MEILISEARCH_HOST=http://meilisearch:7700
      - MEILISEARCH_KEY=masterKey
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_BUCKET=manuscripto
      - AWS_ENDPOINT=http://minio:9000
      - MAIL_MAILER=smtp
      - MAIL_HOST=mailhog
      - MAIL_PORT=1025
    networks:
      - manuscripto-network
    depends_on:
      - mariadb
      - redis
      - meilisearch
      - minio
      - mailhog

  # Nuxt Frontend
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: manuscripto-web
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./apps/web:/app
      - /app/node_modules
    environment:
      - NUXT_PUBLIC_API_BASE=http://localhost:8000/api
    networks:
      - manuscripto-network
    depends_on:
      - api

volumes:
  mariadb_data:
  redis_data:
  meilisearch_data:
  minio_data:

networks:
  manuscripto-network:
    driver: bridge
